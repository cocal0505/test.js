{"version":3,"sources":["데이터(중급)/전개연산자(spread).js"],"names":["fruits","toys1","result1","console","log","toObject","a","b","c","FruitA","FruitB","FruitC","arr1","Object","keys","map","fruit","name","toys","arr2","toy1","toy2","toy3","showName","names","add","result","numbers","forEach","num","User","age","skills","computerUser","arr3","arr4","yes1","yes2","fe","lang","user"],"mappings":"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","file":"전개연산자(spread).90728d2f.js","sourceRoot":"..","sourcesContent":["const fruits =['Apple','banana','Cherry']\r\nconst toys1 =['hoe','sds','king']\r\n\r\nconst result1 = [...fruits, ...toys1]\r\nconsole.log(result1)\r\n\r\n\r\n\r\nconsole.log(fruits)\r\nconsole.log(...fruits) /// 배열 데이터를 전개해서 문자로 반환 // \r\n\r\n\r\nfunction toObject (a,b,c){\r\n    return {\r\n        FruitA:a, \r\n        FruitB:b,\r\n        FruitC:c\r\n    }\r\n}\r\n\r\nconsole.log(toObject(...fruits))       // 전개한 테이터를 받아서 객체로 반환// \r\nconsole.log(toObject( fruits[0],fruits[1]) )   // 위와 같은 결과 // \r\n\r\n\r\nconst arr1 =Object.keys(toObject(...fruits))\r\nconsole.log(arr1)\r\n\r\n\r\n\r\n\r\nconst a = fruits.map( function (fruit){\r\n    return {\r\n        name:fruit\r\n    } \r\n})\r\nconsole.log(a)\r\n\r\n///////////////////////////\r\n\r\n\r\n\r\nconst toys =['Apple','banana','Cherry','orange']\r\nconsole.log(...toys) // 전개연산자//\r\n \r\nfunction arr2 (a,b, ...c){     // rest parameter 나머지매개변수 // \r\n    return {\r\n        toy1:a,\r\n        toy2:b, \r\n        toy3:c\r\n    }\r\n}\r\n\r\n\r\nconsole.log(arr2(...toys))   // ...c 에 있는 것은 따로 배열로 반환 // \r\n\r\n//나머지 매개 변수 //\r\nfunction showName(...names){\r\n    console.log(names)\r\n}\r\nshowName('tom','bob','yes')\r\n\r\n// 나머지 매개 변수를 활용해서 전달 받은 모든 수를 더해야함 //\r\n\r\nfunction add (...numbers){\r\n    let result = 0 \r\n    numbers.forEach((num)=> result += num)\r\n    console.log(result)\r\n}\r\n\r\nadd(1,2,3,4,5,5,6,6,7,7)\r\n\r\n// 나머지 매개 변수를 활용해서 user 객체 생성자 함수를 만들기 // \r\n\r\n\r\nfunction User(name,age,...skills){\r\n    this.name = name\r\n    this.age= age\r\n    this.skills=skills \r\n}\r\n\r\nconst computerUser = new User ('mike',23,'html','css','js')\r\nconsole.log(computerUser)\r\n\r\n\r\n// 전개 구문 복제  // \r\n\r\n\r\nlet arr3 = [1,2,3]\r\nlet arr4 = [4,5,6]\r\n\r\narr3= [...arr4,...arr3]\r\nconsole.log(arr3)\r\n\r\n// object.assign 대신 전개 구문 사용//\r\nlet yes1 ={name: 'mike'}\r\nlet yes2= {age:21}\r\nlet fe =[\"js\",\"html\"]\r\nlet lang =[\"English\",\"Korean\"]\r\n\r\nuser= { \r\n    ...yes1, \r\n    ...yes2, \r\n    skills: [\r\n        ...fe,\r\n        ...lang\r\n    ]\r\n}\r\n\r\n\r\nconsole.log(user) \r\n\r\n\r\n\r\n\r\n"]}