{"version":3,"sources":["데이터(중급)/불변성.js"],"names":["a","b","console","log","c","e","k","f","K","g","a1","name","b1"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA,IAAIA,CAAC,GAAG,CAAR;AAEA,IAAIC,CAAC,GAAG,CAAR;AAEAC,OAAO,CAACC,GAAR,CAAaH,CAAb,EAAeC,CAAf,EAAiBD,CAAC,KAAGC,CAArB;AAGAA,CAAC,GAAGD,CAAJ,EAAO;;AAEPE,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAAeC,CAAf,EAAmBD,CAAC,KAAGC,CAAvB;AAGAD,CAAC,GAAE,CAAH,EAAO;;AAEPE,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAAgBC,CAAhB,EAAmBD,CAAC,KAAGC,CAAvB;AAEA,IAAIG,CAAC,GAAG,CAAR,EAAa;;AACbF,OAAO,CAACC,GAAR,CAAaH,CAAb,EAAeC,CAAf,EAAiBG,CAAjB,EAAoBH,CAAC,KAAKG,CAA1B,GACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,CAAC,GAAE;AAAEC,EAAAA,CAAC,EAAE;AAAL,CAAP;AACA,IAAIC,CAAC,GAAE;AAAED,EAAAA,CAAC,EAAE;AAAL,CAAP;AAEAJ,OAAO,CAACC,GAAR,CAAYE,CAAZ,EAAgBE,CAAhB,EAAmBF,CAAC,KAAKE,CAAzB,GAA8B;;AAE9BF,CAAC,CAACG,CAAF,GAAM,CAAN;AACAD,CAAC,GAAGF,CAAJ,EAAO;;AAEPH,OAAO,CAACC,GAAR,CAAYE,CAAZ,EAAeE,CAAf,EAAoBF,CAAC,KAAKE,CAA1B;AAEAF,CAAC,CAACG,CAAF,GAAM,CAAN,EAAQ;;AACRN,OAAO,CAACC,GAAR,CAAYE,CAAZ,EAAeE,CAAf,EAAmBF,CAAC,KAAIE,CAAxB;AAEA,IAAIE,CAAC,GAAGF,CAAR;AACAL,OAAO,CAACC,GAAR,CAAYE,CAAZ,EAAeE,CAAf,EAAkBE,CAAlB,EAAqBJ,CAAC,KAAGE,CAAzB;AAGAF,CAAC,CAACC,CAAF,GAAM,CAAN;AACAJ,OAAO,CAACC,GAAR,CAAaE,CAAb,EAAgBE,CAAhB,EAAmBE,CAAnB,EAAuBJ,CAAC,KAAGE,CAA3B;AAGA,IAAIG,EAAE,GAAG;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAT;AACA,IAAIC,EAAE,GAAE;AAACD,EAAAA,IAAI,EAAC;AAAN,CAAR;AAEAT,OAAO,CAACC,GAAR,CAAaO,EAAE,KAAIE,EAAnB;AAEAF,EAAE,CAACC,IAAH,GAAS,KAAT;AACAC,EAAE,GAAEF,EAAJ;AACAR,OAAO,CAACC,GAAR,CAAYO,EAAZ,EAAgBE,EAAhB,EAAoBF,EAAE,KAAGE,EAAzB","file":"불변성.fb5654e8.js","sourceRoot":"..","sourcesContent":["// 데이터 불변성 (immutabililty)\r\n// 원시 데이터: ( 기본데이터를의미): string , number , boolean , undefined , null\r\n//-----------------------------------------------------------------------------------------\r\n// |1:            b:  1            |2:             4         |3            a:  7       |4\r\n//----------------------------------------------------------------------------------------\r\n\r\n// a 와 b 는 각가의 메모리 주소를 바라보게 된다.\r\n\r\n\r\nlet a = 1 \r\n\r\nlet b = 4\r\n\r\nconsole.log (a,b,a===b )     \r\n\r\n\r\nb = a  // a 의 메모리 주소를 b 에게 할당 \r\n\r\nconsole.log(a, b , a===b)\r\n\r\n\r\na =7   //  a 는 3번째  새로운 메모리에 할당 \r\n\r\nconsole.log(a , b, a===b)\r\n\r\nlet c = 1    // 숫자 1 번을 바라보게 된다. \r\nconsole.log( a,b,c, b === c )\r\n// 원시형 데이터는  새롭게 만드는게 아니라 이미 존재하면 그것을 재 사용을 한다. // \r\n// 원시테이터는 한번 만들어지면 변화되지 않는다. // \r\n\r\n\r\n// 참조형 데이터 //\r\n// 참조데이터 : object, array , function\r\n// 선언할때 새로운 메모리에 저장된다. \r\n//-----------------------------------------------------------------------------------------\r\n// |1:                       |2:                   |3                   |4\r\n//----------------------------------------------------------------------------------------\r\n\r\nlet e= { k: 1}\r\nlet f= { k: 1}\r\n\r\nconsole.log(e , f, e === f)   // 서로 다른 메모리 주소 // \r\n\r\ne.K = 7 \r\nf = e  // f 는 이제 e 의 메모리 주소를 바라보게 된다. \r\n\r\nconsole.log(e, f  , e === f )\r\n\r\ne.K = 2 // f 는 e 와 같은 메모리 주소를 보고 있기 때문에 자동으로 f 의 내용도 바뀐다.// \r\nconsole.log(e, f,  e ===f )\r\n\r\nlet g = f \r\nconsole.log(e, f, g, e===f )\r\n\r\n\r\ne.k = 9 \r\nconsole.log( e, f, g,  e===f )\r\n\r\n\r\nlet a1 = {name:\"juno\"}\r\nlet b1= {name:\"juno\"}\r\n\r\nconsole.log( a1=== b1)\r\n\r\na1.name =\"bob\"\r\nb1= a1 \r\nconsole.log(a1, b1, a1===b1)\r\n\r\n\r\n\r\n\r\n"]}