{"id":"main.js","dependencies":[{"name":"C:\\Users\\cocal\\Desktop\\js-test2\\package.json","includedInParent":true,"mtime":1619509582553},{"name":"./자바스크립트 기초/getType","loc":{"line":1,"column":20},"parent":"C:\\Users\\cocal\\Desktop\\js-test2\\main.js","resolved":"C:\\Users\\cocal\\Desktop\\js-test2\\자바스크립트 기초\\getType.js"}],"generated":{"js":"\"use strict\";\n\nvar _getType = _interopRequireDefault(require(\"./\\uC790\\uBC14\\uC2A4\\uD06C\\uB9BD\\uD2B8 \\uAE30\\uCD08/getType\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n'use strict'; // javascript 의 기본적인 기능 으로 typeof 사용//\n\n\nconsole.log(_typeof(\"hello world!!!!!!!!\")); //gettype 함수// \n\nconsole.log((0, _getType.default)(123));\nconsole.log((0, _getType.default)(false));\nconsole.log((0, _getType.default)(null));\nconsole.log((0, _getType.default)({}));\nconsole.log((0, _getType.default)([]));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":14},"source":"main.js","original":{"line":4,"column":0}},{"name":"console","generated":{"line":12,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":7},"source":"main.js","original":{"line":5,"column":7}},{"name":"log","generated":{"line":12,"column":8},"source":"main.js","original":{"line":5,"column":8}},{"generated":{"line":12,"column":11},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":20},"source":"main.js","original":{"line":5,"column":19}},{"generated":{"line":12,"column":41},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":45},"source":"main.js","original":{"line":7,"column":0}},{"name":"console","generated":{"line":14,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":7},"source":"main.js","original":{"line":8,"column":7}},{"name":"log","generated":{"line":14,"column":8},"source":"main.js","original":{"line":8,"column":8}},{"generated":{"line":14,"column":11},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":12},"source":"main.js","original":{"line":8,"column":12}},{"generated":{"line":14,"column":34},"source":"main.js","original":{"line":8,"column":20}},{"generated":{"line":14,"column":37},"source":"main.js","original":{"line":8,"column":12}},{"generated":{"line":14,"column":38},"source":"main.js","original":{"line":8,"column":0}},{"name":"console","generated":{"line":15,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":7},"source":"main.js","original":{"line":9,"column":7}},{"name":"log","generated":{"line":15,"column":8},"source":"main.js","original":{"line":9,"column":8}},{"generated":{"line":15,"column":11},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":12},"source":"main.js","original":{"line":9,"column":12}},{"generated":{"line":15,"column":34},"source":"main.js","original":{"line":9,"column":20}},{"generated":{"line":15,"column":39},"source":"main.js","original":{"line":9,"column":12}},{"generated":{"line":15,"column":40},"source":"main.js","original":{"line":9,"column":0}},{"name":"console","generated":{"line":16,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":7},"source":"main.js","original":{"line":10,"column":7}},{"name":"log","generated":{"line":16,"column":8},"source":"main.js","original":{"line":10,"column":8}},{"generated":{"line":16,"column":11},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":12},"source":"main.js","original":{"line":10,"column":12}},{"generated":{"line":16,"column":34},"source":"main.js","original":{"line":10,"column":20}},{"generated":{"line":16,"column":38},"source":"main.js","original":{"line":10,"column":12}},{"generated":{"line":16,"column":39},"source":"main.js","original":{"line":10,"column":0}},{"name":"console","generated":{"line":17,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":7},"source":"main.js","original":{"line":11,"column":7}},{"name":"log","generated":{"line":17,"column":8},"source":"main.js","original":{"line":11,"column":8}},{"generated":{"line":17,"column":11},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":12},"source":"main.js","original":{"line":11,"column":12}},{"generated":{"line":17,"column":34},"source":"main.js","original":{"line":11,"column":20}},{"generated":{"line":17,"column":36},"source":"main.js","original":{"line":11,"column":12}},{"generated":{"line":17,"column":37},"source":"main.js","original":{"line":11,"column":0}},{"name":"console","generated":{"line":18,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":7},"source":"main.js","original":{"line":12,"column":7}},{"name":"log","generated":{"line":18,"column":8},"source":"main.js","original":{"line":12,"column":8}},{"generated":{"line":18,"column":11},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":12},"source":"main.js","original":{"line":12,"column":12}},{"generated":{"line":18,"column":34},"source":"main.js","original":{"line":12,"column":20}},{"generated":{"line":18,"column":36},"source":"main.js","original":{"line":12,"column":12}},{"generated":{"line":18,"column":37},"source":"main.js","original":{"line":12,"column":0}}],"sources":{"main.js":"import getType from \"./자바스크립트 기초/getType\"\r\n'use strict'\r\n\r\n// javascript 의 기본적인 기능 으로 typeof 사용//\r\nconsole.log(typeof \"hello world!!!!!!!!\");\r\n\r\n//gettype 함수// \r\nconsole.log(getType(123))\r\nconsole.log(getType(false))\r\nconsole.log(getType(null))\r\nconsole.log(getType({}))\r\nconsole.log(getType([]))\r\n\r\n"},"lineCount":null}},"error":null,"hash":"2e3300a0fb93d916d5a27819bb74281a","cacheData":{"env":{}}}