// 데이터 불변성 (immutabililty)
// 원시 데이터: ( 기본데이터를의미): string , number , boolean , undefined , null
//-----------------------------------------------------------------------------------------
// |1:            b:  1            |2:             4         |3            a:  7       |4
//----------------------------------------------------------------------------------------

// a 와 b 는 각가의 메모리 주소를 바라보게 된다.


let a = 1 

let b = 4

console.log (a,b,a===b )     


b = a  // a 의 메모리 주소를 b 에게 할당 

console.log(a, b , a===b)


a =7   //  a 는 3번째  새로운 메모리에 할당 

console.log(a , b, a===b)

let c = 1    // 숫자 1 번을 바라보게 된다. 
console.log( a,b,c, b === c )
// 원시형 데이터는  새롭게 만드는게 아니라 이미 존재하면 그것을 재 사용을 한다. // 
// 원시테이터는 한번 만들어지면 변화되지 않는다. // 


// 참조형 데이터 //
// 참조데이터 : object, array , function
// 선언할때 새로운 메모리에 저장된다. 
//-----------------------------------------------------------------------------------------
// |1:                       |2:                   |3                   |4
//----------------------------------------------------------------------------------------

let e= { k: 1}
let f= { k: 1}

console.log(e , f, e === f)   // 서로 다른 메모리 주소 // 

e.K = 7 
f = e  // f 는 이제 e 의 메모리 주소를 바라보게 된다. 

console.log(e, f  , e === f )

e.K = 2 // f 는 e 와 같은 메모리 주소를 보고 있기 때문에 자동으로 f 의 내용도 바뀐다.// 
console.log(e, f,  e ===f )

let g = f 
console.log(e, f, g, e===f )


e.k = 9 
console.log( e, f, g,  e===f )


let a1 = {name:"juno"}
let b1= {name:"juno"}

console.log( a1=== b1)

a1.name ="bob"
b1= a1 
console.log(a1, b1, a1===b1)




